/*
Copyright 2020 AppsCode Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/


// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package go.bytebuilders.dev.resource_model.apis.cluster.v1alpha1;

import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "go.bytebuilders.dev/resource-model/apis/cluster/v1alpha1";

message AWSProvider {
  // +optional
  optional string region = 1;

  // +optional
  optional string clusterID = 2;

  // +optional
  optional string assumeRoleArn = 3;

  // +optional
  optional string assumeRoleExternalID = 4;

  // +optional
  optional string sessionName = 5;

  // +optional
  optional bool forwardSessionName = 6;

  // +optional
  optional bool cache = 7;

  // Temporary Token for 15 mins only, if expired or not set create a new one
  // +optional
  optional string token = 8;

  // +optional
  optional int64 expiration = 9;

  optional string accessKeyID = 10;

  optional string secretAccessKey = 11;
}

// AuthProviderConfig holds the configuration for a specified auth provider.
message AuthProviderConfig {
  optional string name = 1;

  // +optional
  map<string, string> config = 2;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=clusterauthinfotemplates,singular=clusterauthinfotemplate,shortName=cauth,scope=Cluster,categories={kubernetes,resource-model,appscode}
// +kubebuilder:subresource:status
message ClusterAuthInfoTemplate {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ClusterAuthInfoTemplateSpec spec = 2;

  optional ClusterAuthInfoTemplateStatus status = 3;
}

message ClusterAuthInfoTemplateList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated ClusterAuthInfoTemplate items = 2;
}

message ClusterAuthInfoTemplateSpec {
  optional string uid = 1;

  optional int64 ownerID = 2;

  // CertificateAuthorityData contains PEM-encoded certificate authority certificates.
  // +optional
  optional bytes certificateAuthorityData = 3;

  // ClientCertificateData contains PEM-encoded data from a client cert file for TLS.
  // +optional
  optional bytes clientCertificateData = 4;

  // ClientKeyData contains PEM-encoded data from a client key file for TLS.
  // +optional
  optional bytes clientKeyData = 5;

  // Token is the bearer token for authentication to the kubernetes cluster.
  // +optional
  optional string token = 6;

  // Username is the username for basic authentication to the kubernetes cluster.
  // +optional
  optional string username = 7;

  // Password is the password for basic authentication to the kubernetes cluster.
  // +optional
  optional string password = 8;

  // Impersonate is the username to act-as.
  // +optional
  optional string impersonate = 9;

  // ImpersonateGroups is the groups to impersonate.
  // +optional
  repeated string impersonateGroups = 10;

  // ImpersonateUserExtra contains additional information for impersonated user.
  // +optional
  map<string, ExtraValue> impersonateUserExtra = 11;

  // AuthProvider specifies a custom authentication plugin for the kubernetes cluster.
  // +optional
  optional AuthProviderConfig authProvider = 13;
}

message ClusterAuthInfoTemplateStatus {
  // ObservedGeneration is the most recent generation observed for this resource. It corresponds to the
  // resource's generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=clusterinfos,singular=clusterinfo,shortName=cinfo,scope=Cluster,categories={kubernetes,resource-model,appscode}
// +kubebuilder:subresource:status
message ClusterInfo {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ClusterInfoSpec spec = 2;

  optional ClusterInfoStatus status = 3;
}

message ClusterInfoList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated ClusterInfo items = 2;
}

message ClusterInfoSpec {
  optional string displayName = 1;

  optional string name = 2;

  optional string uid = 3;

  optional int64 ownerID = 4;

  // +optional
  optional string externalID = 5;

  // +optional
  optional string ownerName = 6;

  // +optional
  optional string provider = 7;

  // +optional
  optional string endpoint = 8;

  // +optional
  optional string location = 9;

  // +optional
  optional string project = 10;

  // +optional
  optional string kubernetesVersion = 11;

  // +optional
  optional int32 nodeCount = 12;

  // +optional
  optional int64 createdAt = 13;

  // +optional
  optional string age = 14;
}

message ClusterInfoStatus {
  // ObservedGeneration is the most recent generation observed for this resource. It corresponds to the
  // resource's generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // Phase represents current status of the cluster
  // +optional
  optional string phase = 2;

  // Reason explains the reason behind the cluster current phase
  // +optional
  optional string reason = 3;

  // Message specifies additional information regarding the possible actions for the user
  // +optional
  optional string message = 4;
}

message ClusterOptions {
  optional string resourceName = 1;

  optional string provider = 2;

  optional int64 userID = 3;

  optional string cID = 4;

  optional int64 ownerID = 5;

  optional string importType = 6;

  optional string externalID = 7;

  optional string connectorLinkID = 8;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=clusteruserauths,singular=clusteruserauth,shortName=uauth,scope=Cluster,categories={kubernetes,resource-model,appscode}
// +kubebuilder:subresource:status
message ClusterUserAuth {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ClusterUserAuthSpec spec = 2;

  optional ClusterUserAuthStatus status = 3;
}

message ClusterUserAuthList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated ClusterUserAuth items = 2;
}

message ClusterUserAuthSpec {
  optional string clusterUID = 1;

  optional int64 userID = 2;

  // ClientCertificateData contains PEM-encoded data from a client cert file for TLS.
  // +optional
  optional bytes clientCertificateData = 3;

  // ClientKeyData contains PEM-encoded data from a client key file for TLS.
  // +optional
  optional bytes clientKeyData = 4;

  // Token is the bearer token for authentication to the kubernetes cluster.
  // +optional
  optional string token = 5;

  // Username is the username for basic authentication to the kubernetes cluster.
  // +optional
  optional string username = 6;

  // Password is the password for basic authentication to the kubernetes cluster.
  // +optional
  optional string password = 7;

  // Impersonate is the username to act-as.
  // +optional
  optional string impersonate = 8;

  // ImpersonateGroups is the groups to impersonate.
  // +optional
  repeated string impersonateGroups = 9;

  // ImpersonateUserExtra contains additional information for impersonated user.
  // +optional
  map<string, ExtraValue> impersonateUserExtra = 10;

  // AuthProvider specifies a custom authentication plugin for the kubernetes cluster.
  // +optional
  optional AuthProviderConfig authProvider = 11;

  // Provider Access Token params
  // +optional
  optional string provider = 12;

  optional GoogleOAuthProvider googleOAuth = 13;

  optional GoogleCloudCredential googleCloud = 14;

  optional AWSProvider aws = 15;

  optional string credentialName = 16;
}

message ClusterUserAuthStatus {
  // ObservedGeneration is the most recent generation observed for this resource. It corresponds to the
  // resource's generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;
}

// ExtraValue masks the value so protobuf can generate
// +protobuf.nullable=true
// +protobuf.options.(gogoproto.goproto_stringer)=false
message ExtraValue {
  // items, if empty, will result in an empty slice

  repeated string items = 1;
}

message GoogleCloudCredential {
  optional string projectID = 1;

  optional string serviceAccount = 2;
}

message GoogleOAuthProvider {
  optional string clientID = 1;

  optional string clientSecret = 2;

  optional string accessToken = 3;

  // +optional
  optional string refreshToken = 4;

  // +optional
  optional int64 expiry = 5;
}

